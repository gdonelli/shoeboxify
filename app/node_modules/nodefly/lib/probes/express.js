var nf = require('../nodefly');
var proxy = require('../proxy');
var samples = require('../samples');
var UrlAggregator = require('../UrlAggregator');


module.exports = function(express) {
	
	nf.expressAgg = new UrlAggregator();
	
	// set up route on server init
	function routeHook(obj, args, router) {
		var method = args[0];
		var path = args[1];
		var route = method.toUpperCase() + ' ' + path;
		
		// start request
		proxy.callback(args, -1, function(obj, args) {
			if(nf.paused) return;

      var req = args[0];
      var res = args[1];
      var time = samples.time("Express Server", route, true);
      
      //debugger;
			
      // finish request
			proxy.after(res, 'end', function(obj, args) {
				if(!time.done()) return;
				
				//debugger;
				nf.expressAgg._addUrlAtTimestamp(time.begin, route, time.ms, time.cputime, req.tiers);
			});
		});

	}
	
	if (express.Router) { // express 3.x exposes the Router class directly
		proxy.before(express.Router.prototype, ['route'], routeHook);
	}
	else { // express 2.x exposes the router object once the server is created
		proxy.after(express, 'createServer', function(obj, args, app) {
			proxy.before(app.routes, ['_route'], routeHook);
		});
	}
	
};

